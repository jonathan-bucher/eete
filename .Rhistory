x = "Income",
y = "Proportion",
fill = "PT User") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data |>
select(ends_with("_frequency")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(ends_with("_frequency"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
filter(!is.na(work_frequency)) |>
ggplot(aes(x = work_frequency, fill = pt_user, group = pt_user)) +
geom_bar() +
facet_wrap(vars(gender)) +
labs(title = "Count of PT User by Work Frequency and Gender",
x = "Travel to Work Frequency",
y = "Count",
fill = "PT User") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data |>
select(starts_with("start_point"), starts_with("dest_point"), starts_with("start_time"), starts_with("reach_time"), matches("mode\\d+_\\d+$"), matches("purpose_\\d+$"), starts_with("challenges")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(start_time_01, reach_time_01, mode1_01, mode2_01, mode3_01, mode4_01, purpose_01, challenges_01, gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(frequent_mode, ends_with("_rank")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(frequent_mode, ends_with("_rank"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
ggplot(data, aes(x = frequent_mode, fill = gender)) +
geom_bar() +
labs(title = "Count of Frequent Travel Mode by Gender",
x = "Frequent Travel Mode",
y = "Count",
fill = "Gender") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data |>
select(ends_with("difficulty")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("agree")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_a")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_b")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_c")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_d")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_e")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("element_f")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("measure_rank"), measure_wtp) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(contains("permitted"), ask_purpose, starts_with ("curfew")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("views")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("immobility_reason")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("immobile_reason")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("immobile_reason")) |>
filter(is.na(immobile_reason_disability)) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("immobile_reason")) |>
filter(!is.na(immobile_reason_disability)) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("mobile")) |>
filter(!is.na(immobile_reason_disability)) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("mobile")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("mobile_phone")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(contains("perceptions")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("bystander")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("sh")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(starts_with("best_impact")) |>
slice_head(n = 10) |>
kable("html") |>
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F) |>
scroll_box(width = "100%", height = "600px")
data |>
select(ends_with("difficulty"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("agree"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("measure_rank"), measure_wtp, gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(contains("permitted"), ask_purpose, starts_with ("curfew"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("views"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("immobile_reason"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("mobile_phone"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(contains("perceptions"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("bystander"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data |>
select(starts_with("sh"), gender) |>
tbl_summary(
type = list(),
missing = "no",
by = gender
) %>%
add_n() %>%
modify_header(label = "**Variable**") |>
as_gt() %>%
gt::tab_header(
title = "Summary of Selected Columns"
)
data_reg = data |>
mutate(sh_experienced = ifelse(sh_experienced == "Yes, It Happened To Me", 1, 0),
sh_report = case_when(sh_experienced == "Yes, It Happened To Me" &
sh_report == "Yes" ~ 1,
sh_experienced == "Yes, It Happened To Me" &
sh_experienced == "No" ~ 0,
TRUE ~ NA),
pt_user = ifelse(pt_user == "Public Transport User", 1, 0),
female = ifelse(gender == "Female", 1, 0)) |>
filter(pt_user == 1)
mod1 = glm(sh_experienced ~ female, data = data_reg, family = binomial(link = "logit"))
summary(mod1)
setwd("/Users/kairytales/Desktop/CAL POLY/WINTER 2024/World Bank/NCRTC")
help("glm")
library(tidyverse)
data = read_csv("/Users/kairytales/Desktop/CAL POLY/WINTER 2024/paeco526_take_home_final.csv")
#| message: false
#| warning: false
data = read_csv("/Users/kairytales/Desktop/CAL POLY/WINTER 2024/paeco526_take_home_final.csv")
#| message: false
#| warning: false
data = read_csv("/Users/kairytales/Desktop/CAL POLY/WINTER 2024/paeco526_take_home_final.csv")
View(data)
mod1 = lm(dbirwt ~ tobacco, data = data)
summary(mod1)
2/21
probs <- fitted(nl, type="probabilities")
#Question 1
library(readxl)
#Question 1
library(readxl)
camp <- read_excel(path = "campingdemand.xlsx")
getwd()
setwd("/Users/kairytales/Desktop/CAL POLY/WINTER 2024")
#Part A
library(mlogit)
#Question 1
library(readxl)
camp <- read_excel(path = "campingdemand.xlsx")
#Question 1
library(readxl)
camp <- read_excel(path = "campingdemand.xlsx")
#Part A
library(mlogit)
camp_dfidx <-dfidx(data=camp, shape="long", choice="visit",
idx=c('camper_id', 'park_id'))
ml <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx)
summary(ml)
#Part B
nl <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx,
nests = list(mountain = 1:2, beach=3:5))
summary(nl)
#Part C
lrtest(ml, nl)
#Part D
coef(nl)[2:3]/coef(nl)[1]*c(60, -1)
#Part E
probs <- fitted(nl, type="probabilities")
library(tidyverse)
camp %>% tidyverse::filter(park_id == 1) %>%
mutate(prob = probs[, 1],
prob_nest = rowSums(probs[, 1:2]),
prob_cond = prob / prob_nest,
own_elas = coef(nl)[1]*cost*((1/coef(nl)[4])-((1-coef(nl)[4]) / coef(nl)[4]*prob_cond)-prob),
cross_elas_mountain = -coef(nl)[1]*cost*prob*(1+((1-coef(nl)[4])/(coef(nl)[4]*prob_nest))),
cross_elas_beach = -coef(nl)[1]*cost*prob) %>%
summarize(own_elas = mean(own_elas),
cross_elas_mountain = mean(cross_elas_mountain),
cross_elas_beach = mean(cross_elas_beach))
#Question 1
library(readxl)
camp <- read_excel(path = "campingdemand.xlsx")
#Part A
library(mlogit)
camp_dfidx <-dfidx(data=camp, shape="long", choice="visit",
idx=c('camper_id', 'park_id'))
ml <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx)
summary(ml)
#Part B
nl <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx,
nests = list(mountain = 1:2, beach=3:5))
summary(nl)
#Part C
lrtest(ml, nl)
#Part D
coef(nl)[2:3]/coef(nl)[1]*c(60, -1)
#Part E
probs <- fitted(nl, type="probabilities")
library(tidyverse)
camp %>% dplyr::filter(park_id == 1) %>%
mutate(prob = probs[, 1],
prob_nest = rowSums(probs[, 1:2]),
prob_cond = prob / prob_nest,
own_elas = coef(nl)[1]*cost*((1/coef(nl)[4])-((1-coef(nl)[4]) / coef(nl)[4]*prob_cond)-prob),
cross_elas_mountain = -coef(nl)[1]*cost*prob*(1+((1-coef(nl)[4])/(coef(nl)[4]*prob_nest))),
cross_elas_beach = -coef(nl)[1]*cost*prob) %>%
summarize(own_elas = mean(own_elas),
cross_elas_mountain = mean(cross_elas_mountain),
cross_elas_beach = mean(cross_elas_beach))
#Part F
mixl <- mlogit(formula = visit ~ cost + time + mountain |0, data = camp_dfidx,
rpar = c(time = "n", mountain = "n"),
R = 100, seed=500)
summary(mixl)
#Part G
c(coef(mixl)[2]/coef(mixl)[1]*60, abs(coef(mixl)[4])/-coef(mixl)[1]*60) %>%
setNames(c("time", "sd.time"))
c(coef(mixl)[3]/-coef(mixl)[1], abs(coef(mixl)[5])/-coef(mixl)[1]) %>%
setNames(c("mountain", "sd.mountain"))
#Part H
1 - pnorm(q=0, mean = coef(mixl)[3]/-coef(mixl)[1],
sd=abs(coef(mixl)[5])/-coef(mixl)[1])
#Part I
camp_cf <- camp %>% mutate(cost = if_else(park_id == 1, cost+20, cost))
camp_cf_dfidx <-dfidx(data=camp_cf, shape="long", choice="visit", idx=c("camper_id", "park_id"))
choice_obs <-predict(mixl, newdata=camp_dfidx)
choice_cf <-predict(mixl, newdata=camp_cf_dfidx)
colSums(choice_cf-choice_obs)
#Park J
logsum_obs <-logsum(mixl, data=camp_dfidx)
logsum_cf <- logsum(mixl, data=camp_cf_dfidx)
sum((logsum_cf - logsum_obs))/ -coef(mixl)[1]
#Question 1
library(readxl)
camp <- read_excel(path = "campingdemand.xlsx")
#Part A
library(mlogit)
camp_dfidx <-dfidx(data=camp, shape="long", choice="visit",
idx=c('camper_id', 'park_id'))
ml <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx)
summary(ml)
#Part B
nl <- mlogit(formula = visit ~ cost + time + mountain | 0, data = camp_dfidx,
nests = list(mountain = 1:2, beach=3:5))
summary(nl)
#Part C
lrtest(ml, nl)
#Part D
coef(nl)[2:3]/coef(nl)[1]*c(60, -1)
coef(nl)[1]
coef(nl)[2:3]
coef(nl)[2:3]/coef(nl)[1]
help(ecrcd)
library(eete)
help(ecrcd)
help(eete)
setwd("/Users/kairytales/Desktop/CAL POLY/FALL 2023/Research/eete")
help(ecrcd, eete)
??ecrcd
help(ecacd)
help(eete)
help(ebounds)
help("filter")
help("ecrcd")
library(eete)
devtools::document()
?ebounds
help(ecrcd)
253-175
52/4*1000
